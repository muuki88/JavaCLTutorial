
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<name>JavaCL Tutorial</name>
	<groupId>com.mycompany</groupId>
	<artifactId>JavaCLTutorial</artifactId>
	<version>1.0-SNAPSHOT</version>
	<packaging>jar</packaging>
	
	<repositories>
		<repository>
			<id>sonatype</id>
			<name>Sonatype OSS Snapshots Repository</name>
			<url>http://oss.sonatype.org/content/groups/public</url>
		</repository>
	</repositories>
	
	<pluginRepositories>
		<pluginRepository>
			<id>sonatype</id>
			<name>Sonatype OSS Snapshots Repository</name>
			<url>http://oss.sonatype.org/content/groups/public</url>
		</pluginRepository>
	</pluginRepositories>
	
	<dependencies>
		<dependency>
			<groupId>com.nativelibs4java</groupId>
			<artifactId>javacl</artifactId>
			<version>1.0.0-RC2</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<!--
				This plugin will take all the .cl files in src/main/opencl and :
				- copy them to target/generated-resources (keeping the correct sub-path)
				- parse them and generate corresponding JavaCL program wrappers, with one typed method per kernel, in target/generated-sources (in a package that matches the initial .cl file's path)
				-->
				<groupId>com.nativelibs4java</groupId>
				<artifactId>maven-javacl-plugin</artifactId>
				<version>1.0-SNAPSHOT</version>
				<executions>
					<execution>
						<goals>
							<goal>compile</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
